{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmallaraju\\\\Microservices-udemy\\\\blog\\\\client\\\\src\\\\PostList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CommentCreate from './CommentCreate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const [posts, setPosts] = useState({}); //{} because, we need to set an initial value, where posts are obtained as an obj not an array(posts{})\n\n  const fetchPosts = async () => {\n    const res = await axios.get('http://localhost:4000/posts');\n    setPosts(res.data);\n  }; // where to call setPosts? useEffect: used to run some code at very specific point of time in a life cycle of a component \n\n\n  useEffect(() => {\n    fetchPosts();\n  }, []); //[] empty array tells react to run this method only once\n  //generating a list of all the posts titles\n\n  const renderedPosts = Object.values(posts).map(post => {\n    //array of actual post objects\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        width: '30%',\n        marginBottom: '20px '\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), \">Comme\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this);\n  }); //display renderedPosts in the browser\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-row flex-wrap justify-content-between\",\n    children: renderedPosts\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 14\n  }, this);\n}, \"x9bp4+EUybyoJxklz6lKZgAYJjU=\");","map":{"version":3,"sources":["C:/Users/mmallaraju/Microservices-udemy/blog/client/src/PostList.js"],"names":["React","useState","useEffect","axios","CommentCreate","posts","setPosts","fetchPosts","res","get","data","renderedPosts","Object","values","map","post","width","marginBottom","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,kBAAe,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC,CADiB,CACuB;;AAExC,QAAMM,UAAU,GAAG,YAAY;AAC3B,UAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,6BAAV,CAAlB;AAEAH,IAAAA,QAAQ,CAACE,GAAG,CAACE,IAAL,CAAR;AACH,GAJD,CAHiB,CASjB;;;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT,CAXiB,CAaT;AAER;;AACA,QAAMI,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAcR,KAAd,EAAqBS,GAArB,CAAyBC,IAAI,IAAI;AAAE;AACrD,wBACA;AACI,MAAA,SAAS,EAAC,MADd;AAEI,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,YAAY,EAAE;AAA9B,OAFX;AAAA,6BAMI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAA,oBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ,OAGSH,IAAI,CAACI,EAHd;AAAA;AAAA;AAAA;AAAA,YADA;AAcH,GAfqB,CAAtB,CAhBiB,CAiCjB;;AACA,sBAAS;AAAK,IAAA,SAAS,EAAC,mDAAf;AAAA,cACJR;AADI;AAAA;AAAA;AAAA;AAAA,UAAT;AAIH,CAtCD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport CommentCreate from './CommentCreate';\r\n\r\nexport default () => {\r\n    const [posts, setPosts] = useState({}); //{} because, we need to set an initial value, where posts are obtained as an obj not an array(posts{})\r\n\r\n    const fetchPosts = async () => {\r\n        const res = await axios.get('http://localhost:4000/posts');\r\n\r\n        setPosts(res.data);\r\n    };\r\n\r\n    // where to call setPosts? useEffect: used to run some code at very specific point of time in a life cycle of a component \r\n\r\n    useEffect(() => {\r\n        fetchPosts();\r\n    }, []); //[] empty array tells react to run this method only once\r\n\r\n    //generating a list of all the posts titles\r\n    const renderedPosts = Object.values(posts).map(post => { //array of actual post objects\r\n        return ( \r\n        <div\r\n            className=\"card\"\r\n            style={{ width: '30%', marginBottom: '20px ' }}\r\n            key={post.id}\r\n        >\r\n\r\n            <div className=\"card-body\">\r\n                <h3>{post.title}</h3>\r\n                >Comme\r\n            </div>\r\n\r\n        </div>\r\n        );\r\n    }) \r\n\r\n    //display renderedPosts in the browser\r\n    return ( <div className=\"d-flex flex-row flex-wrap justify-content-between\">\r\n        {renderedPosts}\r\n    </div>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}